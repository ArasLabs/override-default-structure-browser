<AML>
 <Item type="Method" id="F47D87B2066F45F3A601C01D303581D1" action="add">
  <comments>Customized by "Override Default Structure Browser" Project. Customize icons by property value.</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[XmlElement inItem = (XmlElement)this.dom.SelectSingleNode("//Item[@type='Method' and @action='GetItemsForStructureBrowser']/Item");

if (inItem != null)
{
    XmlDocument resDOM = Aras.Server.Core.XmlProxy.CreateNewXMLDocument();
    XmlElement result = Aras.Server.Core.XmlProxy.MakeBorders(resDOM);

    //Comment out call to standard structure browser
    //Aras.Server.Core.StructureBrowser sb = new Aras.Server.Core.StructureBrowser(ref CCO);

    //Call for custom browser
    CustomStructureBrowser sb = new CustomStructureBrowser(CCO);

    int levelsToSelect;
    if (!Int32.TryParse(inItem.GetAttribute("levels"), out levelsToSelect))
    levelsToSelect = 2;

    result.InnerXml = sb.GetItemsForStructureBrowser(inItem.GetAttribute("type"),
        inItem.GetAttribute("id"),
        inItem.GetAttribute("compareToITName"),
        inItem.GetAttribute("compareToId"),
        levelsToSelect
    );

    Aras.IOM.Item resItem = this.newItem("");
    resItem.loadAML(resDOM.OuterXml);
    return resItem;
}
else
    return null;

// StructureBrowser class can be overriden.
// Methods available for overriding: GetKeyedNameForItem, CompareItems.
}

class CustomStructureBrowser : Aras.Server.Core.StructureBrowser
{
    static internal string itPart = "Part";

    public CustomStructureBrowser(Aras.Server.Core.CallContext CCO) : base(ref CCO)
    {
        itemPropertiesToSelect["Part"] = new string[] {"state"};
    }

    public override Aras.Server.Core.StructureItem GetNewStructureItem(string itemTypeName, Aras.Server.Core.InnovatorDataSet rs)
    {
        if (itemTypeName == itPart)
        {
            // Call to get our custom StructureItem
            return new CustomStructureItem(rs);
        }
        else
        {
            // Call Default Structure Item
            return new Aras.Server.Core.StructureItem(rs);
        }
    }
}

class CustomStructureItem : Aras.Server.Core.StructureItem
{
    private string _state;

    public CustomStructureItem(Aras.Server.Core.InnovatorDataSet rs) : base(rs)
    {
    	try
        {
            _state = rs["state", ""].ToString(); // property added by above
 	}
        catch {} // property not returned for this ItemType
    }

    //override images based on Part State
    public override string Icon
    {
        get
        {
            if (ItemTypeName == CustomStructureBrowser.itPart)
            {
	    	// return image path relative to Innovator/Client/scripts
		// custom images should be placed in Innovator/Client/customer
                if (_state == "Released")
                {
                    return "../images/QualityItem.svg";
                }
                else if (_state == "Preliminary")
                {
                    return "../images/Phantom.svg";
                }
            }
            return base.Icon;
        }
    }
]]></method_code>
  <method_type>C#</method_type>
  <name>GetItemsForStructureBrowser</name>
 </Item>
</AML>
