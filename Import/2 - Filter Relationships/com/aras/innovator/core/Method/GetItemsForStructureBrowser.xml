<AML>
 <Item type="Method" id="F47D87B2066F45F3A601C01D303581D1" action="add">
  <comments>Customized by "Override Default Structure Browser" Project. Filter for specific ItemTypes.</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[XmlElement inItem = (XmlElement)this.dom.SelectSingleNode("//Item[@type='Method' and @action='GetItemsForStructureBrowser']/Item");

if (inItem != null)
{
    XmlDocument resDOM = Aras.Server.Core.XmlProxy.CreateNewXMLDocument();
    XmlElement result = Aras.Server.Core.XmlProxy.MakeBorders(resDOM);

    // Comment out call to standard structure browser
    // Aras.Server.Core.StructureBrowser sb = new Aras.Server.Core.StructureBrowser(ref CCO);

    // Call for custom browser
    CustomStructureBrowser sb = new CustomStructureBrowser(CCO);
    
    int levelsToSelect;
    if (!Int32.TryParse(inItem.GetAttribute("levels"), out levelsToSelect))
        levelsToSelect = 2;
        
    result.InnerXml = sb.GetItemsForStructureBrowser(inItem.GetAttribute("type"),
        inItem.GetAttribute("id"),
        inItem.GetAttribute("compareToITName"),
        inItem.GetAttribute("compareToId"),
        levelsToSelect
    );

    Aras.IOM.Item resItem = this.newItem("");
    resItem.loadAML(resDOM.OuterXml);
    return resItem;
}
else
    return null;

// StructureBrowser class can be overriden.
// Methods available for overriding: GetKeyedNameForItem, CompareItems.
}

class CustomStructureBrowser : Aras.Server.Core.StructureBrowser
{
    public CustomStructureBrowser(Aras.Server.Core.CallContext CCO) : base(ref CCO)
    {
        itemPropertiesToSelect["Part"] = new string[] {"classification"};
        itemPropertiesToSelect["CAD"] = new string[] {"state"};
        itemPropertiesToSelect["Document"] = new string[] {"state"};
        
        itemTypeRelshipsToSelect["Part"] = new string[] {"Part CAD","Part Document"};
    }
    
    public override Aras.Server.Core.StructureItem GetNewStructureItem(string itemTypeName, Aras.Server.Core.InnovatorDataSet rs)
    {
        // Call to get our custom StructureItem
        return new CustomStructureItem(rs); 
    }
 }
 
class CustomStructureItem : Aras.Server.Core.StructureItem
{
    private string _classification;
    private string _state;

    public CustomStructureItem(Aras.Server.Core.InnovatorDataSet rs) : base(rs)
    {
        try
        {
            _classification = rs["classification", ""].ToString(); // property added by above
        }
        catch {} // property not returned for this ItemType
        
        try
        {
            _state = rs["state", ""].ToString(); // property added by above
        }
        catch {} // property not returned for this ItemType
    }

    public override string KeyedName
    {
        get
        {
            string kn = base.KeyedName;
            if (!String.IsNullOrEmpty(this._classification))
            {
                return kn + " Class: " + this._classification;
            }
            else if (!String.IsNullOrEmpty(this._state))
            {
                return kn + " State: " + this._state;
            }
            else
            {
                return kn;
            }
        }
    }
]]></method_code>
  <method_type>C#</method_type>
  <name>GetItemsForStructureBrowser</name>
 </Item>
</AML>